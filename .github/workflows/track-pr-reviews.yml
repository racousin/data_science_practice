name: Track PR Reviews (Script Version)

on:
  pull_request_review:
    types: [submitted]

jobs:
  update-review-count:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # Only count meaningful reviews (not just empty comments)
    if: github.event.review.state == 'approved' || github.event.review.state == 'changes_requested'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install boto3

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Update Review Count
      env:
        REVIEWER: ${{ github.event.review.user.login }}
        PR_AUTHOR: ${{ github.event.pull_request.user.login }}
        REVIEW_STATE: ${{ github.event.review.state }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        REPO_NAME: ${{ github.event.repository.name }}
      run: |
        python3 scripts/update_review_count.py \
          --reviewer "$REVIEWER" \
          --pr-author "$PR_AUTHOR" \
          --review-state "$REVIEW_STATE" \
          --pr-number "$PR_NUMBER" \
          --repo-name "$REPO_NAME"

    - name: Post Review Summary (Optional)
      if: success()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // Optional: Post a comment acknowledging the review
          // This is commented out by default to avoid noise
          /*
          const reviewer = '${{ github.event.review.user.login }}';
          const state = '${{ github.event.review.state }}';

          const stateEmoji = {
            'approved': '‚úÖ',
            'changes_requested': 'üîÑ',
            'commented': 'üí¨'
          };

          const comment = `${stateEmoji[state] || 'üìù'} Review by @${reviewer} has been recorded. Thank you for your contribution to the peer review process!`;

          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: comment
          });
          */