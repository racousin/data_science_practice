name: Enforce and Evaluate

on:
  pull_request:
    branches:
      - main


# on:
#   pull_request_review:
#     types: [submitted, edited, dismissed]
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     if: github.event.review.state == 'approved'
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.8'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run tests
#         run: pytest

jobs:
  enforce-and-evaluate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetches all history for branches and tags

    - name: Fetch base and head branches
      run: |
        git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
        git fetch origin ${{ github.head_ref }}:refs/remotes/origin/${{ github.head_ref }}

    - name: Check folder permissions and determine changed TPs
      id: check-and-determine
      run: |
        # Extract GitHub username from actor
        USER="${{ github.actor }}"

        # Get list of changed files compared to the base branch
        FILES_CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }})

        # Check if changes are only within user's folder
        echo "Checking folder permissions..."
        for FILE in $FILES_CHANGED; do
          if [[ "$FILE" != "$USER/"* && "$FILE" != "common/"* ]]; then
            echo "::error file=$FILE,Title=Unauthorized File Modification::You can only modify files in your own directory."
            exit 1
          fi
        done

        # Determine the unique tp numbers that have changes
        echo "Determining changed TPs..."
        CHANGED_TPS=$(echo "$FILES_CHANGED" | grep "^${USER}/tp" | sed -E 's|.*/tp([0-9]+)/.*|\1|' | sort | uniq)
        echo "changed_tps=$CHANGED_TPS" >> $GITHUB_ENV

    - name: Run Tests
      run: |
        CHANGED_TPS=${{ env.changed_tps }}
        USER="${{ github.actor }}"
        IFS=' ' read -r -a TPS_ARRAY <<< "$CHANGED_TPS"
        for tp in "${TPS_ARRAY[@]}"; do
          ./tests/run_tests.sh "$USER" "$tp" "${{ secrets.AWS_ACCESS_KEY_ID }}" "${{ secrets.AWS_SECRET_ACCESS_KEY }}" "${{ secrets.AWS_DEFAULT_REGION }}"
        done