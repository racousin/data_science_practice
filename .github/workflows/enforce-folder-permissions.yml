name: Enforce and Evaluate

on:
  push:
    branches:
      - hack


# on:
#   pull_request_review:
#     types: [submitted, edited, dismissed]
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     if: github.event.review.state == 'approved'
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.8'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run tests
#         run: pytest

#TODO github.actor should be the main contributor

jobs:
  enforce-and-evaluate:
    runs-on: ubuntu-latest
    environment: main
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetches all history for branches and tags


    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Ensure these are environment-specific secrets
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Check and Add User to Students List
      run: |
        USER=$AUTHOR # "${{ github.actor }}"
        # Configure AWS CLI (again explicitly for safety if needed)
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}

        # Download the current student list
        aws s3 cp s3://www.raphaelcousin.com/students/config/students.json students.json
        set -x  # Enable debugging to see each command printed before it is executed

        if grep -q "$USER" students.json; then
          echo "$USER is already in the list."
        else
          echo "$USER needs to be added to the list. Acquiring lock..."
          LOCK_EXISTS=$(aws s3 ls s3://www.raphaelcousin.com/students/config/lock.txt && echo "exists" || echo "not exists")
          while [ "$LOCK_EXISTS" = "exists" ]; do
            echo "Waiting for lock to release..."
            sleep 2
            LOCK_EXISTS=$(aws s3 ls s3://www.raphaelcousin.com/students/config/lock.txt && echo "exists" || echo "not exists")
          done
          echo "Creating lock..."
          echo "Lock" | aws s3 cp - s3://www.raphaelcousin.com/students/config/lock.txt

          jq '. |= . + ["'"$USER"'"]' students.json > updated_students.json
          mv updated_students.json students.json
          aws s3 cp students.json s3://www.raphaelcousin.com/students/config/students.json

          echo "Releasing lock..."
          aws s3 rm s3://www.raphaelcousin.com/students/config/lock.txt
        fi