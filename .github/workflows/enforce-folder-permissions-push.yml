name: Enforce and Evaluate

on:
  push:
    branches:
      - main

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetches all history for branches and tags

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Check and Add User to Students List
      run: |
        USER="${{ github.actor }}"
        # Download the current student list
        aws s3 cp s3://www.raphaelcousin.com/students/config/students.json students.json

        # Check if user is already in the list
        if grep -q "$USER" students.json; then
          echo "$USER is already in the list."
        else
          echo "$USER needs to be added to the list. Acquiring lock..."
          LOCK_EXISTS=$(aws s3 ls s3://www.raphaelcousin.com/students/config/lock.txt && echo "exists" || echo "not exists")
          while [ "$LOCK_EXISTS" = "exists" ]; do
            echo "Waiting for lock to release..."
            sleep 10
            LOCK_EXISTS=$(aws s3 ls s3://www.raphaelcousin.com/students/config/lock.txt && echo "exists" || echo "not exists")
          done
          echo "Creating lock..."
          echo "Lock" | aws s3 cp - s3://www.raphaelcousin.com/students/config/lock.txt

          # Update the student list
          jq '. |= . + ["'"$USER"'"]' students.json > updated_students.json
          mv updated_students.json students.json
          aws s3 cp students.json s3://www.raphaelcousin.com/students/config/students.json

          # Release lock
          echo "Releasing lock..."
          aws s3 rm s3://www.raphaelcousin.com/students/config/lock.txt
        fi

    - name: Set Script Permissions
      run: chmod +x ./tests/run_tests.sh ./tests/*/run_tests.sh ./tests/run_tests_and_update_results.sh
    - name: Check folder permissions and determine changed TPs
      id: check-and-determine
      run: |
        USER="${{ github.actor }}"
        git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
        git fetch origin ${{ github.head_ref }}:refs/remotes/origin/${{ github.head_ref }}
        FILES_CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...origin/${{ github.head_ref }})
        echo "FILES_CHANGED: $FILES_CHANGED"

        CHANGED_TPS=$(echo "$FILES_CHANGED" | grep "^${USER}/tp" | sed -E 's|.*/tp([0-9]+)/.*|\1|' | tr '\n' ' ' | xargs)
        echo "CHANGED_TPS: $CHANGED_TPS"
        echo "changed_tps=$CHANGED_TPS" >> $GITHUB_ENV
    - name: Run Tests and Update Results
      run: |
        USER="${{ github.actor }}"
        CHANGED_TPS="${{ env.changed_tps }}"
        if [[ -z "$CHANGED_TPS" ]]; then
          echo "No TPs changed. Skipping tests."
        else
          ./tests/run_tests_and_update_results.sh "$USER" "${{ secrets.AWS_ACCESS_KEY_ID }}" "${{ secrets.AWS_SECRET_ACCESS_KEY }}" "${{ secrets.AWS_DEFAULT_REGION }}" "$CHANGED_TPS"
        fi